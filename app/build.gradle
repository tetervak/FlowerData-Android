plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
//    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "ca.tetervak.flowerdata"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Constraint Layout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // ViewModel and LiveData
    //implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"

    // ??? What for?
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

    // ??? What for?
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Core with Ktx
    implementation 'androidx.core:core-ktx:1.3.2'

    // Fragment Ktx (for by viewModels() in Fragments)
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.3'

    // Retrofit
    //implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    //implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    // Retrofit with Moshi Converter
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
//
//    // Room Database
//    implementation 'androidx.room:room-runtime:2.3.0-alpha03'
//    kapt 'androidx.room:room-compiler:2.3.0-alpha03'
//    implementation 'androidx.room:room-ktx:2.3.0-alpha03'
//    testImplementation 'androidx.room:room-testing:2.3.0-alpha03'
//
//    // Dependency Injection with Hilt
//    implementation "com.google.dagger:hilt-android:2.28-alpha"
//    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
//    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
//    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // Testing
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}